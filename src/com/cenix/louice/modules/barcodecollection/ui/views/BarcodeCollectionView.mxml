<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="com.cenix.louice.shared.ui.components.*" xmlns:components1="org.everest.flex.ui.components.*" xmlns:validators="com.cenix.louice.shared.ui.components.validators.*" xmlns:validators1="org.everest.flex.ui.validators.*">

    <fx:Script>
        <![CDATA[
            import com.cenix.louice.modules.barcodecollection.ui.presenter.BarcodesCollectionPresentationModel;
            import com.cenix.louice.shared.model.vos.BarcodePrintJobMember;
            import com.cenix.louice.shared.model.vos.BarcodeType;
            import com.cenix.louice.shared.ui.view.BarcodePrintPreView;
            
            import org.everest.flex.ui.components.ErrorView;

            [Bindable]
            public var model:BarcodesCollectionPresentationModel;

            protected function printBarcodes(event:MouseEvent):void
            {
                formValidator.validateForm();
                if (formValidator.formIsValid)
                {
                    model.barcodePrintJob = new BarcodePrintJobMember();
                    model.barcodePrintJob.type = typeSelectBox.selectedItem;

                    var barcodes:Array = inputBarcodes.text.split(",");
                    var labels:Array = inputLabels.text.split(",");
                    if ((barcodes.length > 0) && (barcodes[0].length > 0) && checkBoxBarcodes.selected)
                    {
                        for (var i:int = 0; i < barcodes.length; i++)
                        {
                              model.barcodePrintJob.addBarcodeLabelPair(barcodes[i], (labels.length >= i) ? labels[i] : "");
                        }

                    } else  if ((labels.length > 0) && (labels[0].length > 0)){
                        //label only
                        for each (var label:String in labels)
                        {
                            model.barcodePrintJob.addBarcodeLabelPair("",label);
                        }

                    } else {
                        ErrorView.show("Please enter at least one barcode or label.");
                    }

                    model.printBarcodes(printerSelectBox.selectedItem.data);
                }
            }
        ]]>
    </fx:Script>
    <fx:Declarations>
        <fx:Array id="validators">
           <validators:RackBarcodeValidator source="{inputBarcodes}"
                                             property="text"
                                             required="false"/>
            <validators:RackLabelValidator source="{inputLabels}"
                                           property="text"
                                           required="false"/>
        </fx:Array>
        <validators1:FormValidator id="formValidator" validators="{validators}" />
    </fx:Declarations>

    <s:Label id="labelElement" text="Barcode and Text Label Printing" fontWeight="bold" fontSize="14" paddingTop="4"  />

    <s:Group width="100%">
        <s:Rect width="100%" height="100%">
            <s:fill><s:SolidColor color="0xFFFFFF" /></s:fill>
        </s:Rect>

        <s:VGroup id="contentGroup" width="100%"
                  paddingRight="5"
                  paddingLeft="5"
                  paddingBottom="5">


            <s:Form width="100%">
                <s:FormItem width="100%">
                        <s:Label text="This form can be used to quickly print labels. Multiple entries can be seperated by a comma. If you leave the barcodes blank only the text label(s) will be printed."  fontStyle="italic"/>
                </s:FormItem>
                <s:FormItem label="Barcode(s):" width="100%" skinClass="spark.skins.spark.FormItemSkin">
                    <s:CheckBox id="checkBoxBarcodes" />
                    <components1:SmartTextArea id="inputBarcodes" height="150" restrict="0-9," width="100%" verticalAlign="top"
                                               visible="{checkBoxBarcodes.selected}"
                                               includeInLayout="{checkBoxBarcodes.selected}"/>
                </s:FormItem>
                <s:FormItem label="Text Label(s):" width="100%" skinClass="spark.skins.spark.FormItemSkin">
                    <components1:SmartTextArea id="inputLabels" height="150"  width="100%" verticalAlign="top"/>
                </s:FormItem>

                <s:FormItem label="Printer:" width="100%">
                    <s:ComboBox dataProvider="{BarcodePrintPreView.printers}" width="220" color="0x000000"
                                id="printerSelectBox" selectedIndex="0"/>
                </s:FormItem>
                <s:FormItem label="Type" width="100%">
                    <s:ComboBox dataProvider="{BarcodeType.types}" width="220" color="0x000000"
                                id="typeSelectBox" selectedIndex="0"/>
                </s:FormItem>

                <s:FormItem width="100%">
                    <s:HGroup>
                        <s:Button label="print" id="print" click="printBarcodes(event)"/>
                    </s:HGroup>
                </s:FormItem>
            </s:Form>
        </s:VGroup>
    </s:Group>
</s:VGroup>