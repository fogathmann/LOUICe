<?xml version="1.0" encoding="utf-8"?>
<views:NewMemberView xmlns:fx="http://ns.adobe.com/mxml/2009"
                     xmlns:s="library://ns.adobe.com/flex/spark"
                     xmlns:mx="library://ns.adobe.com/flex/mx"
                     xmlns:components="com.cenix.louice.shared.ui.components.*"
                     xmlns:view="org.everest.flex.ui.views.*"
                     xmlns:validators="com.cenix.louice.shared.ui.components.validators.*"
                     xmlns:maps="org.everest.flex.maps.*"
                     xmlns:components1="org.everest.flex.ui.components.*"
                     xmlns:views="org.everest.flex.ui.views.*"
                     creationComplete="{focusManager.setFocus(inputName)}"
                     title="New Project">

    <fx:Script>
        <![CDATA[
            import com.cenix.louice.shared.model.vos.OrganizationMember;
            import com.cenix.louice.shared.model.vos.ProjectMember;
            import com.cenix.louice.shared.model.vos.SubprojectMember;
            import com.cenix.louice.shared.model.vos.UserMember;
            
            import mx.core.FlexGlobals;
            
            import org.everest.flex.model.Link;
            import org.everest.flex.model.Member;
            import org.everest.flex.model.MembersCollection;
            import org.everest.flex.ui.presenters.SuggestionDropDownListPresentationModel;
			
			[Bindable]
			private var _application:Object = FlexGlobals.topLevelApplication;

            protected override function get member():Member{
                var member:ProjectMember = new ProjectMember();
                    member.label = inputName.text;
                    member.leader = new UserMember();
                    member.leader.link =  new Link(leaderInput.text, leaderInput.selectedItem.value);
                    member.customer = new OrganizationMember();
                    member.customer.link = new Link(customerInput.text, customerInput.selectedItem.value);
                    member.subprojects = new MembersCollection();
                    var i:int;
                    for (i = 0; i < 4; i++)
                    {

                        var text:String = this['inputSubproject'+i].text;
                        if(text.length > 0){
                            var newSubproject:SubprojectMember = new SubprojectMember();
                                newSubproject.label = text;
                                newSubproject.active = true;
                                newSubproject.creation_date = new Date();
                            member.subprojects.addItem(newSubproject);
                        }

                    }

                return member;
            }
        ]]>
    </fx:Script>

    <fx:Declarations>

        <fx:Array id="validators">
            <mx:StringValidator maxLength="256" minLength="3" property="text"
                                source="{inputName}"/>
            <validators:SelectionValidator source="{leaderInput}"/>
            <validators:SelectionValidator source="{customerInput}"/>
        </fx:Array>


        <maps:SuggestionEventMap dispatcher="{customerInput}"
                                 presenter="{SuggestionDropDownListPresentationModel}"
                                 view="{SuggestionDropDownListView}"/>

        <maps:SuggestionEventMap dispatcher="{leaderInput}"
                                 presenter="{SuggestionDropDownListPresentationModel}"
                                 view="{SuggestionDropDownListView}"/>

    </fx:Declarations>


    <s:Form id="newMemberForm" width="100%">

            <s:FormItem width="100%" label="Name" required="true">
                <s:TextInput id="inputName"
                             change="this.formValidator.validateForm(event);"/>
            </s:FormItem>
            <s:FormItem width="100%" label="Leader" required="true">
                <components1:SuggestionDropDownListView id="leaderInput"
                                                        change="this.formValidator.validateForm(event);"
                                                        defaultChoice="false"
                                                        preselectedValue="{_application.currentUser.selfLink}"
                                                        url="/users"/>
            </s:FormItem>
            <s:FormItem width="100%" label="Customer" required="true">
                <components1:SuggestionDropDownListView id="customerInput"
                                                        change="this.formValidator.validateForm(event);"
                                                        defaultChoice="false"
                                                        url="/organizations"/>
            </s:FormItem>
        <s:FormItem id="subprojects" width="100%" label="Subproject(s)">
            <s:TextInput id="inputSubproject0"/>
            <s:TextInput id="inputSubproject1"/>
            <s:TextInput id="inputSubproject2"/>
            <s:TextInput id="inputSubproject3"/>
        </s:FormItem>
            <s:FormItem>
                <s:HGroup>
                    <s:Button label="Submit" click="createMember()"
                              enabled="{this.formValidator.formIsValid}"/>
                    <s:Button label="Cancel" click="close()"/>
                </s:HGroup>
            </s:FormItem>

    </s:Form>
</views:NewMemberView>
