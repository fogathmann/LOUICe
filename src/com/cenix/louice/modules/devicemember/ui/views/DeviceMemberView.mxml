<?xml version="1.0" encoding="utf-8"?>
<views:MemberView xmlns:fx="http://ns.adobe.com/mxml/2009"
                 xmlns:s="library://ns.adobe.com/flex/spark"
                 xmlns:mx="library://ns.adobe.com/flex/mx"
                 xmlns:components="com.cenix.louice.shared.ui.components.*"
                xmlns:view="org.everest.flex.ui.views.*"
                 title="{'Device: ' + model.title}" xmlns:components1="org.everest.flex.ui.components.*" xmlns:views="org.everest.flex.ui.views.*" >

    <fx:Script>
        <![CDATA[
//            import com.cenix.louice.shared.model.vos.DeviceTypeMember;
//            import com.cenix.louice.shared.model.vos.Link;
//            import com.cenix.louice.shared.model.vos.OrganizationMember;
//            import com.cenix.louice.shared.model.vos.SubprojectMember;
//            import com.cenix.louice.shared.model.vos.UserMember;
//            import com.cenix.louice.shared.ui.presenters.SuggestionDropDownListPresentationModel;
//
//            import spark.events.IndexChangeEvent;
//
//            protected function manufacturerInputChangeHandler(event:IndexChangeEvent=null):void
//            {
//                if (manufacturerInput.selectedItem != null)
//                {
//                    var newOrg:OrganizationMember = new OrganizationMember();
//                    newOrg.link = new Link(manufacturerInput.selectedItem.label, manufacturerInput.selectedItem.value);
//
//                    model.manufacturer = newOrg;
//                }
//            }
//
//            protected function devicetypeInputChangeHandler(event:IndexChangeEvent):void
//            {
//                if (devicetypeInput.selectedItem != null)
//                {
//                    var newDeviceType:DeviceTypeMember = new DeviceTypeMember();
//                    newDeviceType.link = new Link(devicetypeInput.selectedItem.label, devicetypeInput.selectedItem.value);
//
//                    model.type = newDeviceType;
//                }
//            }
        ]]>
    </fx:Script>
<!--
    <fx:Declarations>
        <fx:Array id="validators">
            <mx:StringValidator maxLength="256" minLength="3" property="text" source="{inputLabel}"/>
        </fx:Array>

        <maps:SuggestionEventMap dispatcher="{manufacturerInput}"
                                 presenter="{SuggestionDropDownListPresentationModel}"
                                 view="{SuggestionDropDownListView}"/>

        <maps:SuggestionEventMap dispatcher="{devicetypeInput}"
                                 presenter="{SuggestionDropDownListPresentationModel}"
                                 view="{SuggestionDropDownListView}"/>
    </fx:Declarations>
-->
    <!-- NORMAL CONTENT -->
    <view:content>
        <s:Form width="100%">
            <s:FormItem label="Label">
                <s:Label text="{model.label}"/>
            </s:FormItem>
            <s:FormItem label="Model">
                <s:Label text="{model.model}"/>
            </s:FormItem>
            <s:FormItem label="Type">
                <components1:MemberLinkButton link="{model.type}"/>
            </s:FormItem>
            <s:FormItem label="Manufacturer">
                <components1:MemberLinkButton link="{model.manufacturer}"/>
            </s:FormItem>
            <s:FormItem label="Locations">
                <components1:MemberLinkButton link="{model.locations}"/>
            </s:FormItem>
        </s:Form>
    </view:content>

    <!-- EDITOR CONTENT
    <view:editorContent>
        <s:Form width="100%">
            <s:FormItem label="Label">
                <s:TextInput id="inputLabel" change="{model.label = inputLabel.text}"
                             text="{model.label}"/>
            </s:FormItem>
            <s:FormItem label="Model">
                <s:TextInput id="inputModel" change="{model.model = inputModel.text}"
                             text="{model.model}"/>
            </s:FormItem>
            <s:FormItem label="Type">
                <components:SuggestionDropDownListView id="devicetypeInput"
                                                       change="devicetypeInputChangeHandler(event)"
                                                       defaultChoice="false" url="/device-types"
                                                       selectedItem="{model.type}"/>
            </s:FormItem>
            <s:FormItem label="Manufacturer">
                    <components:SuggestionDropDownListView id="manufacturerInput"
                                                           change="manufacturerInputChangeHandler(event)"
                                                           defaultChoice="false"
                                                           url="/organizations"
                                                           selectedItem="{model.manufacturer}"/>
            </s:FormItem>
            <s:FormItem label="Locations">
                <components:MemberLinkButton link="{model.locations}"/>
            </s:FormItem>
        </s:Form>
    </view:editorContent>
    -->

</views:MemberView>