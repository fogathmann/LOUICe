<?xml version="1.0" encoding="utf-8"?>
<views:CollectionView xmlns:fx="http://ns.adobe.com/mxml/2009"
                      xmlns:s="library://ns.adobe.com/flex/spark"
                      xmlns:mx="library://ns.adobe.com/flex/mx"
                      xmlns:louice="org.helixyte.louice.*"
                      xmlns:view="org.everest.flex.ui.views.*"
                      xmlns:maps1="org.everest.flex.maps.*"
                      xmlns:components1="org.everest.flex.ui.components.*"
                      xmlns:views="org.everest.flex.ui.views.*"
                      width="100%" height="100%">
    <fx:Script>
        <![CDATA[
            import org.helixyte.louice.modules.isorequestcollection.ui.manager.OwnerSuggestionManager;
            import org.helixyte.louice.shared.model.vos.IsoRequestMember;
            
            import org.everest.flex.model.SelectionChoice;
            import org.everest.flex.ui.presenters.SuggestionDropDownListPresentationModel;

            private static const STOCK_USR:String = IsoRequestMember.STOCKMANAGEMENT_USER;

            protected override function filterButton_clickHandler(event:MouseEvent):void
            {
                ownerInput.textValue = ownerInput2.text;
                model.filterCollection();
            }

            protected function addStockmanagement(event:MouseEvent):void
            {

                if (ownerInput2.text.toLocaleLowerCase().indexOf(STOCK_USR) < 0)
                {
                    var owner:String = (ownerInput2.text.length == 0) ? 
                                       STOCK_USR : 
                                       ownerInput2.text + ", " + STOCK_USR;
                    ownerInput2.selectedItem= new SelectionChoice(owner,owner);
                }
            }
                
        ]]>
    </fx:Script>

    <fx:Declarations>
        <maps1:SuggestionEventMap dispatcher="{requesterInput}"
                                  presenter="{SuggestionDropDownListPresentationModel}"
                                  view="{SuggestionDropDownListView}"/>
        <maps1:SuggestionEventMap dispatcher="{ownerInput2}"
                                  manager="{OwnerSuggestionManager}"
                                  presenter="{SuggestionDropDownListPresentationModel}"
                                  view="{SuggestionDropDownListView}"/>
    </fx:Declarations>

    <view:filterFormContent>
        <s:FormItem label="Requester">
            <components1:SuggestionDropDownListView id="requesterInput"
                                                    width="200"
                                                    criteria="{model.criteria}"
                                                    defaultChoice="true"
                                                    name="requester"
                                                    operator="equal-to"
                                                    url="/users/?size=500"/>
        </s:FormItem>
        <s:FormItem label="Ticket Owner">
            <s:HGroup>
                <components1:SmartTextArea id="ownerInput" visible="false"
                                           criteria="{model.criteria}"
                                           includeInLayout="false" name="owner"
                                           operator="contains"/>
                <components1:SuggestionDropDownListView id="ownerInput2"
                                                        width="240"
                                                        defaultChoice="false"
                                                        selectedItem="{new SelectionChoice(ownerInput.text,ownerInput.text)}"
                                                        url="/users/?size=500"/>
                <s:Button id="btAddStockmangement" label="+ Stockmangement"
                          click="addStockmanagement(event)"/>
            </s:HGroup>
        </s:FormItem>
    </view:filterFormContent>

    <view:collectionGridColumns>
        <s:GridColumn dataField="iso_type" headerText="ISO Type"/>        
        <s:GridColumn dataField="experiment_metadata"
                      headerText="Experiment Metadata"
                      itemRenderer="org.everest.flex.ui.renderers.DataGridLinkRenderer"/>
        <s:GridColumn dataField="owner" headerText="Request Owner"/>
        <s:GridColumn dataField="requester" headerText="Requester"
                      itemRenderer="org.everest.flex.ui.renderers.DataGridLinkRenderer"/>
        <s:GridColumn dataField="label" headerText="Plate Set Label"/>
        <s:GridColumn width="180" minWidth="136" dataField="delivery_date"
                      headerText="Delivery Date"
                      labelFunction="{dateLabelFunction}">
            <s:itemRenderer>
                <fx:Component>
                    <s:DefaultGridItemRenderer textAlign="right"/>
                </fx:Component>
            </s:itemRenderer>
        </s:GridColumn>
<!--
        <s:GridColumn headerText="ISOs." dataField="isosCount" width="90">
            <s:itemRenderer>
                <fx:Component>
                    <s:DefaultGridItemRenderer
                        textAlign="center"/>
                </fx:Component>
            </s:itemRenderer>
        </s:GridColumn>
-->
    </view:collectionGridColumns>

</views:CollectionView>
