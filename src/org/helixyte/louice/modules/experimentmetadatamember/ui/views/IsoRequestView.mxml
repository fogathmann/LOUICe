<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:rack="org.helixyte.louice.shared.ui.components.rack.*"
         xmlns:renderers="org.everest.flex.ui.renderers.*"
         xmlns:louice="org.helixyte.louice.*"
         xmlns:components1="org.everest.flex.ui.components.*">
    <fx:Script>
        <![CDATA[
            import org.helixyte.louice.shared.model.vos.LabIsoRequestMember;
            
            import mx.events.CalendarLayoutChangeEvent;
            
            import spark.formatters.DateTimeFormatter;
            
            import org.everest.flex.model.Link;

            [Bindable]
            private var _isoRequest:LabIsoRequestMember;

            private static const dtf:DateTimeFormatter = new DateTimeFormatter();
                                 dtf.dateTimePattern = "MMM dd yyyy";

            public function set isoRequest(isoRequest:LabIsoRequestMember):void
            {
                this._isoRequest = isoRequest;
                if (isoRequest != null)
                {
                    tagForHighlightSelector.tagPredicates = isoRequest.rack_layout.tagPredicates;
                    rackView.tagMap = isoRequest.rack_layout.tagPredicateMap;
                    rackView.dimension = [isoRequest.rack_layout.rack_shape.number_rows,
                        isoRequest.rack_layout.rack_shape.number_columns];                    
                }
                else
                {
                    tagForHighlightSelector.tagPredicates = null;
                    rackView.tagMap = null;
                }
            }

            protected function deliveryDateSelector_changeHandler(event:CalendarLayoutChangeEvent):void
            {
                var d:Date = deliveryDateSelector.selectedDate;
                if (d != null)
                {
                    var dd:Date = new Date();
                    dd.setUTCFullYear(d.getFullYear(), d.getMonth(), d.getDate());
                    _isoRequest.delivery_date = dd;
                }
            }

            private function dateLabel(date:Date):String
            {
                return dtf.format(date);
            }
        ]]>
    </fx:Script>
    <s:states>
        <s:State name="pendingRequest" />
        <s:State name="pendingResponse" />
        <s:State name="edit" />
        <s:State name="view" />
    </s:states>

    <s:VGroup width="178" paddingTop="10" left="0" top="5" bottom="0">

        <components1:MemberLinkButton 
            link="{new Link('Show ISO request','/lab-iso-requests/' + _isoRequest.id)}"/>
        <s:Spacer height="5" />
        <s:Label text="Requester:" fontWeight="bold" />
        <s:HGroup  paddingLeft="5">
            <s:Label text="{_isoRequest.requester.username}"/>
        </s:HGroup>
        <s:Spacer height="5" />
        <s:Label text="Ticket Owner:" fontWeight="bold"/>
        <s:Label text="{_isoRequest.owner}" paddingLeft="5"/>
        <s:Spacer height="5" />
        <s:Label text="Plate Set label:" fontWeight="bold"/>
        <s:Label text="{_isoRequest.label}" paddingLeft="5"/>
        <s:Spacer height="5" />
        <s:Label text="ISO Plate(s):" fontWeight="bold"/>
        <s:Label text="{_isoRequest.expected_number_isos}" paddingLeft="5"/>
        <s:Label text="Aliquot(s) per ISO Plate:" fontWeight="bold"/>
        <s:Label text="{_isoRequest.number_aliquots}" paddingLeft="5"/>
        <s:Spacer height="5" />
        <s:Label text="Delivery Date:" fontWeight="bold"/>
        <mx:DateField id="deliveryDateSelector"
                      labelFunction="dateLabel"
                      selectedDate="{_isoRequest.delivery_date}"
                      disabledRanges="{[ {rangeEnd: new Date()} ]}"
                      enabled="false" enabled.edit="true"
                      toolTip.view="Please press 'Edit' to change the delivery date."
                      change="deliveryDateSelector_changeHandler(event)"/>
    </s:VGroup>

    <s:Group  left="180" right="220" top="10" bottom="10" >
        <rack:RackView label="ISO Layout" id="rackView" top="0" left="0" right="10" bottom="5"/>
    </s:Group>

    <rack:TagForHighlightSelector id="tagForHighlightSelector" right="0" width="220" top="0" bottom="0"
                                  rackView="{rackView}" height="100%"/>
</s:Group>
