<?xml version="1.0" encoding="utf-8"?>
<views:CollectionView xmlns:fx="http://ns.adobe.com/mxml/2009"
                      xmlns:s="library://ns.adobe.com/flex/spark"
                      xmlns:mx="library://ns.adobe.com/flex/mx"
                      xmlns:louice="org.helixyte.louice.*"
                      xmlns:view="org.everest.flex.ui.views.*"
                      xmlns:maps1="org.everest.flex.maps.*"
                      xmlns:components1="org.everest.flex.ui.components.*"
                      xmlns:views="org.everest.flex.ui.views.*"
                      width="100%" height="100%" showCsvButton="true"
                      title="Stock Info">

    <fx:Script>
        <![CDATA[
            import org.helixyte.louice.shared.model.vos.GeneMember;
            import org.helixyte.louice.shared.model.vos.StockInfoMember;
            import org.helixyte.louice.shared.utils.UnitConvUtils;
            
            import spark.events.IndexChangeEvent;
            
            import org.everest.flex.model.MembersCollection;
            import org.everest.flex.ui.presenters.SuggestionDropDownListPresentationModel;

            private function targetGeneLabelFunction(item:Object, column:*):String
            {
                var label:String = "";
                var targetLabels:Array = new Array();
                var targetGenes:MembersCollection = StockInfoMember(item).genes;
                for each (var targetGene:GeneMember in targetGenes) 
                {
                    targetLabels.push(targetGene.accession + ":" + 
                                      targetGene.locus_name + ":" + 
                                      targetGene.species.acronym);
                }
                if (targetLabels.length > 5) {
                    label = targetLabels.slice(0, 5).join(", ") +
                        ", [..." + (targetLabels.length - 5) + " more...]";
                }
                else {
                    label = targetLabels.join(", ");
                }
                return label;
            }

            private function getAcronym(speciesTitle:String):String
            {   //A bit of a hack but this avoids
                //putting the species as entity in each
                //gene which would make the request even slower.
                var res:String;
                switch(speciesTitle)
                {
                    case "human": res = "HS"; break;
                    case "mouse": res = "MM"; break;
                    case "rat": res = "RN"; break;
                    case "worm": res = "CE"; break;
                    case "fly": res= "DN"; break;
                    default: res= speciesTitle;
                }

                return res;
            }

            protected function moleculeTypeInput_changeHandler(event:IndexChangeEvent):void
            {
                trace(moleculeTypeInput.selectedItem);
            }

            protected function targetSpeciesInput_changeHandler(event:IndexChangeEvent):void
            {
                trace(targetSpeciesInput.selectedItem);                
            }
        ]]>
    </fx:Script>


    <fx:Declarations>
        <maps1:SuggestionEventMap dispatcher="{moleculeTypeInput}"
                                  presenter="{SuggestionDropDownListPresentationModel}"
                                  view="{SuggestionDropDownListView}"/>
        <maps1:SuggestionEventMap dispatcher="{modificationInput}"
                                  presenter="{SuggestionDropDownListPresentationModel}"
                                  view="{SuggestionDropDownListView}"/>
        <maps1:SuggestionEventMap dispatcher="{targetSpeciesInput}"
                                  presenter="{SuggestionDropDownListPresentationModel}"
                                  view="{SuggestionDropDownListView}"/>
    </fx:Declarations>

    <view:filterFormContent>
        <s:FormItem width="100%" label="Pool Design ID">
            <components1:SmartTextArea criteria="{model.criteria}"
                                       name="molecule-design-pool-id"
                                       operator="contained" restrict="0-9 ,"/>
        </s:FormItem>
        <s:FormItem width="100%" label="Targeted Gene Accession">
            <components1:SmartTextArea criteria="{model.criteria}"
                                       name="genes.accession"
                                       operator="contained"
                                       restrict="a-zA-Z0-9 ,"/>
        </s:FormItem>
        <s:FormItem label="Target Species">
            <components1:SuggestionDropDownListView id="targetSpeciesInput"
                                                    width="256"
                                                    change="targetSpeciesInput_changeHandler(event)"
                                                    criteria="{model.criteria}"
                                                    name="genes.species"
                                                    operator="equal-to"
                                                    url="/species"/>
        </s:FormItem>
        <!--
        <s:FormItem label="Sample Minimum Volume (μl)">
            <components:NumberInput 
                width="64"
                conversionFactor="{UnitConvUtils.VOLUME_FACTOR}"
                criteria="{model.criteria}"
                name="minimum-volume"
                operator="greater-than-or-equal-to"/>
        </s:FormItem>
        -->
        <s:FormItem label="Sample Molecule Concentration (μM)">
            <components1:NumberInput width="64" accessibilityDescription=""
                                     conversionFactor="{UnitConvUtils.CONCENTRATION_FACTOR}"
                                     criteria="{model.criteria}"
                                     name="concentration" operator="equal-to"/>
        </s:FormItem>
        <s:FormItem label="Molecule Type">
            <components1:SuggestionDropDownListView id="moleculeTypeInput"
                                                    width="256"
                                                    change="moleculeTypeInput_changeHandler(event)"
                                                    criteria="{model.criteria}"
                                                    name="molecule-type"
                                                    operator="equal-to"
                                                    url="/molecule-types"/>
        </s:FormItem>
        <s:FormItem label="Modification">
            <components1:SuggestionDropDownListView id="modificationInput"
                                                    width="256"
                                                    criteria="{model.criteria}"
                                                    name="molecule-design-pool.molecule-designs.chemical-structures"
                                                    operator="contains"
                                                    url="{moleculeTypeInput.selectedItem.value ?                        moleculeTypeInput.selectedItem.value + 'modifications' :                        null}"/>
        </s:FormItem>
    </view:filterFormContent>

    <view:collectionGridColumns>
<!-- FIXME: reenable once the rendering of design pool links works
		<s:GridColumn minWidth="64" 
                      dataField="molecule_design_pool"
                      headerText="Molecule Design Pool"
                      itemRenderer="org.everest.flex.ui.renderers.DataGridLinkRenderer"/>
-->     
		<s:GridColumn minWidth="64" dataField="molecule_design_pool_id"
                      headerText="Pool Design ID"/>
		<s:GridColumn minWidth="64" dataField="molecule_type"
                      headerText="Molecule Type"
                      itemRenderer="org.everest.flex.ui.renderers.DataGridLinkRenderer"/>
        <s:GridColumn width="82" dataField="total_tubes" headerText="# Tubes"/>
        <s:GridColumn minWidth="64" dataField="total_volume"
                      headerText="Total Volume (μl)"
                      labelFunction="{UnitConvUtils.dataGridVolumeLabelFunction}"/>
        <s:GridColumn minWidth="64" dataField="minimum_volume"
                      headerText="Minimum-Volume (μl)"
                      labelFunction="{UnitConvUtils.dataGridVolumeLabelFunction}"/>
        <s:GridColumn minWidth="64" dataField="maximum_volume"
                      headerText="Maximum Volume (μl)"
                      labelFunction="{UnitConvUtils.dataGridVolumeLabelFunction}"/>
        <s:GridColumn minWidth="64" dataField="concentration"
                      headerText="Concentration (μM)"
                      labelFunction="{UnitConvUtils.dataGridConcentrationLabelFunction}"/>
        <s:GridColumn minWidth="210" headerText="Targeted Genes"
                      labelFunction="{targetGeneLabelFunction}" sortable="false"/>
    </view:collectionGridColumns>

</views:CollectionView>
